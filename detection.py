from termcolor import colored
import re


def detect_malicious_activitiy(line, lineNumber, checked_list, output_file):
    line = line.strip()
    for word in checked_list:

        if word in line:
            a = str(lineNumber)
            print(colored("\t\t\t\t\t\t\t" + a + ") MALICIOUS or EVASION-->  WORD: " + word + "= ",
                          "cyan") + line )
            output_file.write("\n\t\t\t\t\t\t\t" + a + ") MALICIOUS or EVASION-->  WORD: " + word + "= " + line)


def detect_class(line, output_file):
    if "public" in line and "class" in line:
        line = line.replace("{", " ")
        line = line.strip()
        print(colored("CLASS NAME: ", "red") + line)
        output_file.write("\nCLASS NAME: " + line)
        print()
        output_file.write("\n")


def detect_function(line, output_file):
    line = line.strip()

    if "void" in line and "return" not in line and "." not in line:
        print(colored("\n## FUNCTION: ", "green", attrs=['underline']) + line)
        output_file.write("\n\n## FUNCTION: " + line)

    elif "String" in line and "(" in line and "=" not in line and "return" not in line and "." not in line:
        print(colored("\n## FUNCTION: ", "green", attrs=['underline']) + line)
        output_file.write("\n\n## FUNCTION: " + line)

    elif "boolean" in line and "(" in line and "=" not in line and "return" not in line and "." not in line:
        print(colored("\n## FUNCTION: ", "green", attrs=['underline', 'bold']) + line)
        output_file.write("\n\n## FUNCTION: " + line)


def detect_array(line, lineNumber, output_file):
    if ("[]" in line):

        a = re.findall("\{[0-9, ]+[0-9]*\}", line)  # {} şeklinde tanımlanmış array ler

        b = re.findall("\[[0 - 9, ] + [0 - 9] *\]", line)  # [] şu şekilde tanımlanmış arraylar

        # print("Süslü Array:"+ str(a))
        # print("Düz array: " + str(b))

        for full_list in a:
            array = []

            number = re.findall("[0-9]+", str(full_list))
            for byte_array in number:
                array.append(int(byte_array))

            result = "".join(map(chr, array))

            print("\t\t\t\t\t\t" + colored(str(lineNumber) + ") Array Result: ", "red") + result)
            output_file.write("\n\t\t\t\t\t\t" + str(lineNumber) + ") Array Result: " + result)


def detect_variable(line, lineNumber, output_file, checked_list):
    if ("=" in line and "if" not in line):
        line = line.strip()
        a = str(lineNumber)
        print(colored("\t\t\t" + a + ") VARIABLE: ", "magenta") + line)
        output_file.write("\n\t\t\t" + a + ") VARIABLE: " + line)
        detect_array(line, lineNumber,output_file)
        detect_malicious_activitiy(line, lineNumber, checked_list, output_file)


def detect_library(line, imported_library):

    if ("import" in line):
        imported_library.add(line.replace('\n', ' '))

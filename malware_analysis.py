import os
from termcolor import colored
import detection as detect
import util as util
import sys

# python3 malware_analysis <file name> <attribute> <output file> <library file>
#             (0)              (1)         (2)          (3)           (4)

# python3 malware_analysis ./sources  attribute.txt   output_file.txt  malware_library.txt



#util.determine_file_name(sys.argv)

checked_list = util.deploy_checked_list(sys.argv[2]);

def give_report(startpath,output_name):

    util.show_tree_view(startpath)
    output = open(output_name, "w")
    start_analysis(startpath,output)
    output.close()


def start_analysis(startpath,output_file):

    imported_library = set()

    for dirpath, dirs, files in os.walk(startpath):

        for filename in files:
            fname = os.path.join(dirpath, filename)
            analysis_file(fname, filename,output_file,imported_library)

    util.write_library_to_file(imported_library,sys.argv[4])

def analysis_file(fname, filename, output_file, imported_library):
    print(
        colored("\n**************************************************************************************************",
                "yellow"))
    print(colored("\t\t\t\t\t\t| ANALYZING FILE |", "red") + filename)
    print(
        colored("**************************************************************************************************\n",
                "yellow"))

    output_file.write(
        "\n\n**************************************************************************************************\n")
    output_file.write("\t\t\t\t\t\t| ANALYZING FILE |" + filename +"\n")
    output_file.write(
        "\n**************************************************************************************************\n")

    with open(fname) as myfile:
        lineNumber = 1
        for line in myfile:
            analysis_line(line, lineNumber, output_file,imported_library)
            lineNumber += 1

        myfile.close()


def analysis_line(line, lineNumber,output_file,imported_library):

    detect.detect_library(line, imported_library)

    detect.detect_class(line, output_file)

    detect.detect_function(line, output_file)

    detect.detect_variable(line,lineNumber, output_file, checked_list)


give_report(sys.argv[1],sys.argv[3])



os._exit(0)
